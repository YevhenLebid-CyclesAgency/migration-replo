<style>
  #recomended h2 {
    font-family: Rubik, sans-serif;
    font-size: 30px;
    line-height: 38px;
    letter-spacing: 0;
    font-weight: 700;
    color: #20425e;
    text-align: center;
    margin-bottom: 40px;
  }
  #recomended {
    padding: 60px 0 100px;
  }

  #recomended .content > .flex {
    align-items: stretch;
    flex-wrap: nowrap;
  }

  #recomended .schedule {
    border-radius: 16px;
    background: #f8f8f8;
    padding: 48px 100px;
    margin-bottom: 100px;
  }

  .schedule {
    padding: 100px 0;
    background-color: #f8f8f8;
  }

  .schedule .flx {
    display: flex;
    align-items: center;
    justify-content: space-around;
  }

  .schedule > * {
    width: 95%;
    margin: 0 auto;
    max-width: 1200px;
  }

  .schedule h2 {
    text-align: center;
    margin-bottom: 60px;
    color: #000000;
    font-size: 36px;
    font-weight: 700;
    font-family: 'Roboto', sans-serif;
  }

  .schedule .schedule {
    background-color: #fff;
    border-radius: 25px;
    margin-bottom: 60px;
    padding: 30px 10%;
  }

  .schedule .schedule select {
    width: fit-content;
  }

  .schedule .spots {
    color: #1e415f;
    font-size: 18px;
    font-weight: 700;
  }

  .schedule .spots > p {
    width: 200px;
    text-align: center;
    padding: 50px 35px;
    line-height: 1.1;
  }
  .schedule .spots > p:first-child {
    background: url('https://conversionratestore.github.io/projects/somnifix/img/spot1.svg') center center no-repeat;
    background-size: contain;
  }

  .schedule .spots > p:nth-child(2) {
    background: url('https://conversionratestore.github.io/projects/somnifix/img/spot2.svg') center center no-repeat;
    background-size: contain;
  }

  .schedule .spots > p:last-child {
    background: url('https://conversionratestore.github.io/projects/somnifix/img/spot3.svg') center center no-repeat;
    background-size: contain;
  }

  .schedule .delivery_time {
    position: relative;
  }

  .schedule .delivery_time > div:not(.line) {
    position: absolute;
    top: -70px;
  }

  .schedule .delivery_time > div:nth-child(3) {
    left: 20%;
  }

  .schedule .delivery_time > div:last-child {
    left: 65%;
  }

  @media (max-width: 1255px) {
    .schedule .delivery_time > div:last-child {
      top: -98px;
    }
  }

  .schedule .delivery_time > div:not(.line) > p:first-child {
    font-size: 20px;
    font-weight: 700;
    color: #1e415f;
  }

  .schedule .delivery_time > div:not(.line) > p:nth-child(2) {
    font-size: 14px;
    color: #1e415f;
  }

  #recomended .schedule .delivery_time > div:not(.line) > p:last-child {
    font-size: 14px;
    margin-top: 40px;
    color: #5e778b;
  }
  .new_schedule.schedule .delivery_time > div:not(.line) > p.delivery_date:last-child {
    font-weight: 400;
  }

  #recomended .schedule .line {
    margin: 85px 0 35px;
    height: 10px;
    width: 100%;
    background-color: #e3f4ff;
    border-radius: 10px;
    position: relative;
  }

  .schedule .line span {
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #2374b5;
    position: absolute;
    top: -5px;
    left: 0;
  }

  .schedule .line span.point2 {
    left: calc(20% - 10px);
  }

  .schedule .line span.point3 {
    left: calc(65% - 10px);
  }

  .schedule .line p {
    height: 10px;
    width: 65%;
    background-color: #2374b5;
    border-radius: 10px;
  }

  @media screen and (max-width: 768px) {
    #recomended h2 {
      text-align: left;
      font-size: 24px;
      line-height: 32px;
      font-weight: 500;
      margin-bottom: 20px;
    }

    #recomended .schedule {
      background: #fff;
      width: auto;
      margin: 0 20px 40px;
      padding: 20px;
      border-radius: 8px;
    }

    #recomended .schedule .line {
      margin: 0 0 0 79px;
      width: 6px;
      height: 224px;
    }

    .schedule .line span {
      left: -7px;
      top: 0;
    }

    .schedule .line span.point2 {
      left: -7px;
      top: calc(30% - 10px);
    }

    .schedule .line span.point3 {
      left: -7px;
      top: calc(75% - 10px);
    }

    .schedule .line p {
      height: 75%;
      width: 100%;
    }

    .schedule .delivery_time > div:not(.line) {
      left: 0;
      top: -5px;
      width: fit-content;
      margin-left: 105px !important;
    }

    .schedule .delivery_time > div:nth-child(3) {
      top: calc(30% - 15px);
    }

    .schedule .delivery_time > div:last-child {
      top: calc(75% - 15px);
    }

    .schedule .delivery_time > div:not(.line) > p:first-child {
      font-size: 18px;
      line-height: 26px;
    }

    #recomended .schedule .delivery_time > div:not(.line) > p:last-child {
      position: absolute;
      top: 5px;
      left: -105px;
      width: 70px;
      line-height: 1.3;
      margin-top: 0;
    }
  }
</style>

<div class="section">
  <div id="recomended">
    <div class="content">
      <h2>Results in just 7 days</h2>
      <div
        class="schedule"
        data-desc="Results in just 7 days"
        data-visible="Results in just 7 days"
      >
        <div class="delivery_time">
          <div class="line">
            <span class="point1"></span>
            <span class="point2"></span>
            <span class="point3"></span>
            <p></p>
          </div>
          <div>
            <p>Order SomniFix</p>
            <p>Today</p>
            <p class="today">{{ 'now' | date: '%B %d, %Y' }}</p>
          </div>
          <div>
            <p>Shipping</p>
            <p>2-3 days</p>
            <p class="delivery_date"></p>
          </div>
          <div>
            <p>Feel rested thanks to nasal breathing</p>
            <p>After 7 nights of use</p>
            <p class="money_back_date"></p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    function resultLine() {
      const today = new Date();
      const timestamp = today.getTime();

      const date1 = new Date(timestamp + 1000 * 60 * 60 * 24 * 9);
      const date2 = new Date(timestamp + 1000 * 60 * 60 * 24 * 11);
      const date3 = new Date(timestamp + 1000 * 60 * 60 * 24 * 16);
      const date4 = new Date(timestamp + 1000 * 60 * 60 * 24 * 18);

      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

      // Форматирование строк
      const deliveryDateText = `${months[date1.getMonth()]} ${date1.getDate()} - ${
        months[date2.getMonth()]
      } ${date2.getDate()}, ${date1.getFullYear()}`;
      const moneyBackDateText = `${months[date3.getMonth()]} ${date3.getDate()} - ${
        months[date4.getMonth()]
      } ${date4.getDate()}, ${date3.getFullYear()}`;

      // Устанавливаем текст в нужные элементы
      const deliveryDateElement = document.querySelector('.schedule .delivery_date');
      const moneyBackDateElement = document.querySelector('.schedule .money_back_date');

      if (deliveryDateElement) {
        deliveryDateElement.textContent = deliveryDateText;
      }

      if (moneyBackDateElement) {
        moneyBackDateElement.textContent = moneyBackDateText;
      }
    }
    resultLine();
  });
</script>

{% schema %}
{
  "name": "ETA",
  "settings": [
    {
      "type": "text",
      "id": "quick_add_strips_title",
      "label": "Title",
      "default": "Results in just 7 days"
    }
  ],
  "presets": [
    {
      "name": "ETA"
    }
  ]
}
{% endschema %}
